import Head from "next/head";
import type {
    NextPage,
    GetServerSideProps,
    GetServerSidePropsContext,
    InferGetServerSidePropsType,
} from "next";
import { Sidebar } from "components/Sidebar";
import { Feed } from "components/Feed";
import { getServerSession } from "next-auth";
import { getProviders, getSession, useSession } from "next-auth/react";
import { Login } from "components/Login";
import { Modal } from "components/Modal";
import { useRecoilState } from "recoil";
import { modalState } from "atoms/modal-atom";
import {Widget} from "components/Widget";
function Home<NextPage>({
    trendingResults,
    followResults,
    providers,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
    const { data: session } = useSession();
    const [isOpen, setIsOpen] = useRecoilState(modalState);
    if (!session) return <Login providers={providers} />;

    return (
        <div>
            <Head>
                <title>Twitter</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="bg-black min-h-screen flex max-w-[1500px]">
                <Sidebar />
                <Feed />
				<Widget trendingResults={trendingResults} followResults={followResults}/>
                {isOpen && <Modal />}
            </main>
        </div>
    );
}

export default Home;

export async function getServerSideProps<GetServerSideProps>(
    context: GetServerSidePropsContext,
) {
    const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV").then(
        (res) => res.json(),
    );
    const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then(
        (res) => res.json(),
    );

    const providers = await getProviders();
    const session = await getSession(context);

    return {
        props: {
            trendingResults,
            followResults,
            providers,
            session,
        },
    };
}
